#N canvas 770 375 431 341 10;
#X obj 126 89 inlet;
#X obj 126 242 outlet;
#X obj 153 221 outlet;
#X obj 165 158 inlet;
#X msg 165 180 inlet \$1;
#X obj 153 200 ofelia d -k \$0-number;
#A __set local c = ofCanvas(this) \; local args = c:getArgs() \; local
xpos \, ypos \, width \, height \, min \, max = args[1] \, args[2]
\, args[3] \, args[4] \, args[5] \, args[6] \; local mouseState = 0
\; local key = 0 \; local value = 0 \; local previewValue = 0 \; local
preview = 0 \; local count = 0 \; local decimalPlace = 0 \; local multiply
= 1 \; local now = 0 \; local fbo = ofFbo() \; ofelia.visibility =
1 \; \; function M.new() \; ofWindow.addListener("setup" \, this) \;
ofWindow.addListener("mousePressed" \, this) \; ofWindow.addListener("mouseDragged"
\, this) \; ofWindow.addListener("keyPressed" \, this) \; ofWindow.addListener("keyReleased"
\, this) \; if ofWindow.exists then \; M.setup() \; end \; end \; \;
function M.free() \; ofWindow.removeListener("setup" \, this) \; ofWindow.removeListener("mousePressed"
\, this) \; ofWindow.removeListener("mouseDragged" \, this) \; ofWindow.removeListener("keyPressed"
\, this) \; ofWindow.removeListener("keyReleased" \, this) \; end \;
\; function M.setup() \; fbo:allocate(width \, height) \; M.render()
\; end \; \; function M.bang() \; ofSetColor(255) \; fbo:draw(xpos
\, ypos) \; if now < ofGetElapsedTimeMillis() then \; preview = 0 \;
previewValue = 0 \; count = 0 \; decimalPlace = 0 \; multiply = 1 \;
end \; end \; \; function M.mousePressed(e) \; count = 0 \; previewValue
= 0 \; preview = 0 \; decimalPlace = 0 \; multiply = 1 \; if ofelia.visibility
== 1 and ofGetMouseX() > xpos and ofGetMouseX() < xpos + width and
ofGetMouseY() > ypos and ofGetMouseY() < ypos + height then \; mouseState
= 1 \; else \; mouseState = 0 \; end \; M.render() \; return value
\; end \; \; function M.mouseDragged(e) \; if mouseState == 1 then
\; --if key == 83 then \; --value = math.floor(ofGetPreviousMouseY()
- ofGetMouseY()) / 1000 + value \; --else \; value = ofGetPreviousMouseY()
- ofGetMouseY() + value \; --end \; if value > max then \; value =
max \; end \; if value < min then \; value = min \; end \; M.render()
\; return value \; end \; end \; \; function M.keyPressed(e) \; key
= e.key \; if key == 43 and mouseState == 1 and count == 0 then \;
now = ofGetElapsedTimeMillis() + 3000 \; multiply = 1 \; end \; if
key == 45 and mouseState == 1 and count == 0 then \; now = ofGetElapsedTimeMillis()
+ 3000 \; multiply = - 1 \; end \; --if key == 46 and mouseState ==
1 then \; --decimalPlace = 1 \; --end \; if key >= 48 and key <= 57
and mouseState == 1 then \; now = ofGetElapsedTimeMillis() + 3000 \;
preview = 1 \; if decimalPlace == 0 then \; previewValue = previewValue
* 10 + (key - 48) * multiply \; else \; count = count + 1 \; previewValue
= previewValue + ((key - 48) * multiply / 10 ^ count) \; end \; end
\; if key == 69 and preview == 1 then \; value = previewValue \; if
value > max then \; value = max \; end \; if value < min then \; value
= min \; end \; preview = 0 \; mouseState = 0 \; end \; M.render()
\; return value \; end \; \; function M.keyReleased(e) \; key = 0 \;
end \; \; function M.inlet(f) \; value = f \; M.render() \; return
value \; end \; \; function M.render() \; fbo:beginFbo() \; ofClear(0)
\; ofSetColor(0) \; ofDrawRectangle(0 \, 0 \, width \, height) \; ofSetColor(255)
\; ofDrawRectangle(2 \, 2 \, width - 4 \, height - 4) \; if mouseState
== 0 then \; ofSetColor(0) \; else \; ofSetColor(100 \, 200 \, 255)
\; end \; if preview == 1 then \; --font:drawString(string.format("%g"..">"
\, previewValue) \, 5 \, 14) \; ofDrawBitmapString(string.format("%g"..">"
\, previewValue) \, 5 \, 14) \; else \; --font:drawString(string.format("%g"
\, value) \, 5 \, 14) \; ofDrawBitmapString(string.format("%g" \, value)
\, 5 \, 14) \; end \; fbo:endFbo() \; end \;;
#X f 22;
#X msg 171 136 visibility \$1;
#X obj 126 179 t b b;
#X obj 126 112 route bang float;
#X connect 0 0 8 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 7 1 5 0;
#X connect 8 0 7 0;
#X connect 8 1 6 0;
